[{"/Users/keatonproctor/Desktop/React Course/music-player/src/index.js":"1","/Users/keatonproctor/Desktop/React Course/music-player/src/App.js":"2","/Users/keatonproctor/Desktop/React Course/music-player/src/reportWebVitals.js":"3","/Users/keatonproctor/Desktop/React Course/music-player/src/components/Player.js":"4","/Users/keatonproctor/Desktop/React Course/music-player/src/components/Song.js":"5","/Users/keatonproctor/Desktop/React Course/music-player/src/data.js":"6","/Users/keatonproctor/Desktop/React Course/music-player/src/components/Library.js":"7","/Users/keatonproctor/Desktop/React Course/music-player/src/components/LibrarySong.js":"8","/Users/keatonproctor/Desktop/React Course/music-player/src/components/Nav.js":"9"},{"size":478,"mtime":1609185512359,"results":"10","hashOfConfig":"11"},{"size":2079,"mtime":1610912627720,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609183205154,"results":"13","hashOfConfig":"11"},{"size":3297,"mtime":1610911574793,"results":"14","hashOfConfig":"11"},{"size":322,"mtime":1610511182858,"results":"15","hashOfConfig":"11"},{"size":2150,"mtime":1609275985931,"results":"16","hashOfConfig":"11"},{"size":845,"mtime":1610831482073,"results":"17","hashOfConfig":"11"},{"size":1143,"mtime":1610911517510,"results":"18","hashOfConfig":"11"},{"size":467,"mtime":1610831615207,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"e3p2ib",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/keatonproctor/Desktop/React Course/music-player/src/index.js",[],["40","41"],"/Users/keatonproctor/Desktop/React Course/music-player/src/App.js",[],"/Users/keatonproctor/Desktop/React Course/music-player/src/reportWebVitals.js",[],"/Users/keatonproctor/Desktop/React Course/music-player/src/components/Player.js",["42"],"import React, {useEffect} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({audioRef, currentSong, setCurrentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, setSongs}) => {\n    //UseEffect\n    useEffect(() => {\n        const newSongs = songs.map((song) => {\n            if(song.id === currentSong.id){\n                return{\n                    ...song,\n                    active: true,\n                }\n            }else{\n                return{\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n    },[currentSong]);\n    //Event Handlers\n    const playSongHandler = () => {\n        if(isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n\n    const getTime = (time) => {\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value});\n    };\n\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === \"skip-forward\"){\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        }\n        if(direction === \"skip-back\"){\n            if((currentIndex - 1) % songs.length === -1){\n                setCurrentSong(songs[songs.length -1]);\n                if(isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n        }\n        if(isPlaying) audioRef.current.play();\n    };\n\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input \n                    min={0} \n                    max={songInfo.duration || 0} \n                    value={songInfo.currentTime}\n                    onChange={dragHandler}\n                    type=\"range\"\n                />\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0.00\"}</p>\n            </div>\n\n            <div className=\"play-control\">\n                <FontAwesomeIcon \n                    onClick={() => skipTrackHandler(\"skip-back\")} \n                    className=\"skip-back\" \n                    size=\"2x\" \n                    icon={faAngleLeft} \n                />\n                <FontAwesomeIcon \n                    onClick={playSongHandler} \n                    className=\"play\" \n                    size=\"2x\" \n                    icon={isPlaying ? faPause : faPlay} \n                />\n                <FontAwesomeIcon \n                    onClick={() => skipTrackHandler(\"skip-forward\")}\n                    className=\"skip-forward\" \n                    size=\"2x\" \n                    icon={faAngleRight} \n                />\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Player;","/Users/keatonproctor/Desktop/React Course/music-player/src/components/Song.js",[],"/Users/keatonproctor/Desktop/React Course/music-player/src/data.js",[],"/Users/keatonproctor/Desktop/React Course/music-player/src/components/Library.js",[],"/Users/keatonproctor/Desktop/React Course/music-player/src/components/LibrarySong.js",[],"/Users/keatonproctor/Desktop/React Course/music-player/src/components/Nav.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":22,"column":7,"nodeType":"49","endLine":22,"endColumn":20,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"56","text":"57"},[750,763],"[currentSong, setSongs, songs]"]